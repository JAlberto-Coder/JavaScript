// ****************************************// Versión: 1.0// ****************************************// 16-10-2022 | JAlberto-Coder | Clase operaciones// ****************************************// * Evita la confusión de suma vs contatenaciónvar x = 10 + 5; //El resultado de esta sentencia es 15var x = 10 + '5'; //El resultado de esta sentencia es 105var x = 10;var y = 5;var z = x + y; // El resultado de esta sentencia es 15var x = 10;var y = '5';var z = x + y; // El resultado de esta sentencia es 105var x = 10;var y = document.getElementById("campoConValor5");var z = x + y; // El resultado de esta sentencia es 105// ****************************************// Errores en operaciones con punto flotante // Todos los números de punto flotante en JavaScript se almacenan con 64 bits, en general todos los lenguajes de programación tienen dificultades con este tipo de dato y JavaScript no es la excepción.var x = 0.1; var y = 0.2; var z = x + y; // El resultado de esta operación no es 0.3 si no 0.30000000000000004(z == 0.3) // La comparación nos dará un false ya que los dos números no son iguales// La recomendación es manejar los valores en entero multiplicándolos por una constante 10 y tratarlos.var z = (x * 10 + y * 10) / 10; // El resultado de esta operación es 0.3// ****************************************var objOperacion = {	herramientas: {		esEntero: (valor) => {			return objOperacion.herramientas.esDefinido(valor) 				? typeof valor === 'number' ? (valor !== NaN) : false				: false;		},		esDefinido: (valor) => {			return typeof valor !== 'undefined' && valor !== null;		},	},	operacion: (valor1, valor2, operacion) => {		if (!objOperacion.herramientas.esEntero(valor1) && !objOperacion.herramientas.esEntero(valor2)) 			return NaN;				valor1 = valor1.toString().split('.');		valor2 = valor2.toString().split('.');				var resultado = NaN			, valor1Decimal = valor1[1] || '0'			, valor2Decimal = valor2[1] || '0';		var diferenciaDecimal = valor1Decimal.length - valor2Decimal.length;		while (diferenciaDecimal > 0) {			valor2Decimal += '0';			diferenciaDecimal--;		}		while (diferenciaDecimal < 0) {			valor1Decimal += '0';			diferenciaDecimal++;		}				valor1 = valor1[0] + valor1Decimal;		valor2 = valor2[0] + valor2Decimal;				var valor1Entero = parseInt(valor1, 10);		var valor2Entero = parseInt(valor2, 10);		var maxDecimal = Math.max(valor1Decimal.length, valor2Decimal.length);		switch (operacion) {			case '+':				resultado = (valor1Entero + valor2Entero) / Math.pow(10, maxDecimal);				break;			case '-':				resultado = (valor1Entero - valor2Entero) / Math.pow(10, maxDecimal);				break;			case '*':				resultado = (valor1Entero * valor2Entero) / Math.pow(10, (valor1Decimal.length + valor2Decimal.length));				break;			case '/':				resultado = (valor1Entero / valor2Entero);				break;		}		return resultado;	}};